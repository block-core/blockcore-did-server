name: Build and Release Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true
        default: github.event.release.tag_name
      assets_url:
        description: 'Assets URL'
        required: true
        default: github.event.release.assets_url
      publish_image:
        description: 'Publish image'
        required: true
        default: 'true'

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: Log Variables
      run: |
        echo "action - ${{ github.event.action }}"
        echo "url - ${{ github.event.release.url }}"
        echo "assets_url - ${{ github.event.release.assets_url }}"
        echo "id - ${{ github.event.release.id }}"
        echo "tag_name - ${{ github.event.release.tag_name }}"
        echo "assets - ${{ github.event.assets }}"
        echo "assets[0] - ${{ github.event.assets[0] }}"
    - name: Download release
      uses: sondreb/action-release-download@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        url: ${{ github.event.inputs.assets_url }}
        folder: "./artifacts/"

    # This will extract the .zip on root and re-create same structure as normal dev build,
    # so the same Dockerfile can be used for local debug/build and for the pipeline.
    - name: Extract asset
      run: tar -C ./build -xzvf ./artifacts/blockcore-did-server-${{ github.event.inputs.release_version }}.tgz --strip-components=1

    - name: Display structure of downloaded files
      run: ls -R

    - name: Copy the dockerfile into artifacts.
      run: copy dockerfile ./build/

    - name: Build the Docker container image
      run: docker build -f "./build/dockerfile" -t blockcore/blockcore-did-server:latest -t blockcore/blockcore-did-server:${{ github.event.inputs.release_version }} --build-arg VERSION=${{ github.event.inputs.release_version }} "."

    - if: github.event.inputs.publish_artifacts == 'true'
      name: Login and Push to Docker Registry
      run: |
        echo "PUBLISHING IMAGE!!"
      #docker login -u "sondreb" -p "${{secrets.DOCKER_KEY}}"
      #docker push --all-tags blockcore/blockcore-did-server